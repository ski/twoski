{"version":3,"file":"static/js/queryString.41db0dd6.chunk.js","mappings":"yFAQO,SAASA,EACdC,EACAC,GAEA,OAAOC,OAAOC,KAAKF,GAAQG,QAAO,SAACC,EAAwBC,GACrDA,EAAIC,WAAWP,KAEjBK,EADcC,EAAIE,OAAOR,EAAOS,SACnBR,EAAOK,IAEtB,OAAOD,CACT,GAAG,CAAC,EACN,C,2DCTO,SAASK,EACdC,EACAC,GAEA,IAAMC,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOJ,EACT,IACMK,EADSJ,EAAEK,OAAOC,MAAM,GACRC,MAAM,KAAKhB,QAAO,SAACC,EAAwBgB,GACzD,MAASA,EAAID,MAAM,KAAlBE,EAAC,KAAEC,EAAC,KAEX,OADAlB,EAAIiB,IAAK,EAAAE,EAAAA,4BAA2BD,GAC7BlB,CACT,GAAG,CAAC,GAEEoB,EAAQ,GAENC,EAAgCT,EAAM,QAA7BU,EAAuBV,EAAM,UAAlBW,EAAYX,EAAM,QACxC,GAAqD,IAAAY,eACzDlB,EAAUmB,QAAQC,gBAEhBpB,EAAUmB,QAAQC,eAClB,CAAC,EAJG,IAAAC,IAAKC,OAAU,IAAG,OAAI,EAAE,IAAAC,IAAKC,OAAU,IAAG,OAAI,EAMtD,GAAIP,EAAS,CACX,IAAMQ,EAASC,MAAMC,QAAQrB,EAAOW,SAChCX,EAAOW,QAAQ,GACfX,EAAOW,QAEPK,EAAWM,KAAKH,IAClBzB,EAAU6B,eAAeJ,E,CAI7B,GAAIV,EAAS,CACX,IAAMQ,EAAMG,MAAMC,QAAQrB,EAAOS,SAC7BT,EAAOS,QAAQ,GACfT,EAAOS,QAEX,GAAIS,EAAWI,KAAKL,GAAM,CACxB,IAAMO,EAAS1C,EAAW,aAAckB,GAExCQ,EAAMiB,KAAK/B,EAAUgC,SAAST,EAAKO,G,EAIvC,GAAId,EAAW,CACb,IAAM,EAAQU,MAAMC,QAAQrB,EAAOU,WAC/BV,EAAOU,UAAU,GACjBV,EAAOU,UACLiB,EAAQ7C,EAAW,YAAakB,GACtCQ,EAAMiB,KAAK/B,EAAUkC,MAAM,EAAOD,G,CAGpC,OAAOE,QAAQC,IAAItB,EACrB,C","sources":["node_modules/@segment/analytics-next/src/core/query-string/pickPrefix.ts","node_modules/@segment/analytics-next/src/core/query-string/index.ts"],"sourcesContent":["import { QueryStringParams } from '.'\n\n/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(\n  prefix: string,\n  object: QueryStringParams\n): QueryStringParams {\n  return Object.keys(object).reduce((acc: QueryStringParams, key: string) => {\n    if (key.startsWith(prefix)) {\n      const field = key.substr(prefix.length)\n      acc[field] = object[key]!\n    }\n    return acc\n  }, {})\n}\n","import { pickPrefix } from './pickPrefix'\nimport { gracefulDecodeURIComponent } from './gracefulDecodeURIComponent'\nimport { Analytics } from '../analytics'\nimport { Context } from '../context'\nimport { isPlainObject } from '@segment/analytics-core'\n\nexport interface QueryStringParams {\n  [key: string]: string | null\n}\n\nexport function queryString(\n  analytics: Analytics,\n  query: string\n): Promise<Context[]> {\n  const a = document.createElement('a')\n  a.href = query\n  const parsed = a.search.slice(1)\n  const params = parsed.split('&').reduce((acc: QueryStringParams, str) => {\n    const [k, v] = str.split('=')\n    acc[k] = gracefulDecodeURIComponent(v)\n    return acc\n  }, {})\n\n  const calls = []\n\n  const { ajs_uid, ajs_event, ajs_aid } = params\n  const { aid: aidPattern = /.+/, uid: uidPattern = /.+/ } = isPlainObject(\n    analytics.options.useQueryString\n  )\n    ? analytics.options.useQueryString\n    : {}\n\n  if (ajs_aid) {\n    const anonId = Array.isArray(params.ajs_aid)\n      ? params.ajs_aid[0]\n      : params.ajs_aid\n\n    if (aidPattern.test(anonId)) {\n      analytics.setAnonymousId(anonId)\n    }\n  }\n\n  if (ajs_uid) {\n    const uid = Array.isArray(params.ajs_uid)\n      ? params.ajs_uid[0]\n      : params.ajs_uid\n\n    if (uidPattern.test(uid)) {\n      const traits = pickPrefix('ajs_trait_', params)\n\n      calls.push(analytics.identify(uid, traits))\n    }\n  }\n\n  if (ajs_event) {\n    const event = Array.isArray(params.ajs_event)\n      ? params.ajs_event[0]\n      : params.ajs_event\n    const props = pickPrefix('ajs_prop_', params)\n    calls.push(analytics.track(event, props))\n  }\n\n  return Promise.all(calls)\n}\n"],"names":["pickPrefix","prefix","object","Object","keys","reduce","acc","key","startsWith","substr","length","queryString","analytics","query","a","document","createElement","href","params","search","slice","split","str","k","v","gracefulDecodeURIComponent","calls","ajs_uid","ajs_event","ajs_aid","isPlainObject","options","useQueryString","aid","aidPattern","uid","uidPattern","anonId","Array","isArray","test","setAnonymousId","traits","push","identify","props","track","Promise","all"],"sourceRoot":""}